<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:NewPDV"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    x:Name="tema">


    <Color x:Key="PadraoColor">#01a3a4</Color>
    <Color x:Key="PadraoColor2">#01a3a4</Color>
    <SolidColorBrush x:Key="PadraoBackGround">#01a3a4</SolidColorBrush>
    <SolidColorBrush x:Key="PadraoBackGround2">#01a3a4</SolidColorBrush>
    <SolidColorBrush x:Key="PadraoTexto">#000000</SolidColorBrush>
    <FontFamily x:Key="fonteFamilia">Arial</FontFamily>
    <sys:Double x:Key="FonteTamanho">11</sys:Double>



    <SolidColorBrush x:Key="PadraoMouseOver">#74b9ff</SolidColorBrush>
    <SolidColorBrush x:Key="PadraoAlertar">#FA8072</SolidColorBrush>
    <SolidColorBrush x:Key="GridBorda">#0984e3</SolidColorBrush>
    <SolidColorBrush x:Key="GridBordaForm">#0984e3</SolidColorBrush>
    <SolidColorBrush x:Key="GridForm">#FFFFFF</SolidColorBrush>

    <Style x:Key="TextBox" TargetType="TextBox">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        CornerRadius="2"
                        BorderBrush="#000"
                        BorderThickness="1"
                        Background="#fff"
>
                        <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#909090"/>
                            <Setter Property="Foreground" Value="{DynamicResource PadraoBackGround}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource PadraoBackGround}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="Titulo" TargetType="Label">
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource PadraoTexto}"/>
        <Setter Property="FontSize" Value="60"/>
    </Style>


    <Style x:Key="BotaoPadrao" TargetType="Button">
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource PadraoTexto}"/>
        <Setter Property="FontFamily" Value="{DynamicResource fonteFamilia}"/>
        <Setter Property="FontSize" Value="{DynamicResource FonteTamanho}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PadraoBackGround}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="nome" CornerRadius="5" BorderThickness="2"  >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="nome" Value="{DynamicResource PadraoBackGround2}"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="nome" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" >
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="{DynamicResource PadraoColor}" Offset="0" />
                                            <GradientStop Color="{DynamicResource PadraoColor2}" Offset="1" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style  TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontFamily" Value="{DynamicResource fonteFamilia}"/>
                <Setter Property="FontSize" Value="{DynamicResource FonteTamanho}"/>
                <Setter Property="Background" Value="{DynamicResource PadraoBackGround}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="rowStyle" TargetType="Control">
        <Setter Property="FontFamily" Value="{DynamicResource fonteFamilia}"/>
        <Setter Property="FontSize" Value="{DynamicResource FonteTamanho}"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>

            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource PadraoBackGround2}" />
                <Setter Property="Foreground" Value="{DynamicResource PadraoTexto}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PadraoBackGround}" />
                <Setter Property="Foreground" Value="{DynamicResource PadraoTexto}"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="columnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" >
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="{DynamicResource PadraoColor}" Offset="0" />
                        <GradientStop Color="{DynamicResource PadraoColor2}" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource PadraoTexto}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="{DynamicResource fonteFamilia}"/>
        <Setter Property="FontSize" Value="{DynamicResource FonteTamanho}"/>
    </Style>























    <SolidColorBrush x:Key="Cor1">#18918B</SolidColorBrush>
    <SolidColorBrush x:Key="Cor2">#1BA39C</SolidColorBrush>
    <SolidColorBrush x:Key="Cor3">#EC9C00</SolidColorBrush>
    <Style x:Key="BotaoVerde" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" BorderThickness="1" BorderBrush="{StaticResource Cor1}" Background="{StaticResource Cor1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>









    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF8ec458"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>


    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <!-- ADDED: -->
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="wpfPadrao" TargetType="Window">
        <!--Set to true to not get any properties from the themes.-->
        <Setter Property="Height" Value="700"/>
        <Setter Property="Width" Value="1000"/>
        <Setter Property="MinHeight" Value="700"/>
        <Setter Property="MinWidth" Value="1000"/>
        <Setter Property="WindowState" Value="Maximized"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Background" Value="{DynamicResource PadraoBackGround}"/>
        <Setter Property="FontFamily" Value="{DynamicResource fonteFamilia}"/>
        <Setter Property="FontSize" Value="{DynamicResource FonteTamanho}"/>
        <!--Setter Property="AllowsTransparency" Value="True"/-->
    </Style>


    <ControlTemplate x:Key="WindowControlTemplate1" TargetType="{x:Type Window}">
        <Border 
        Background="{TemplateBinding Background}"       
            
        BorderBrush="{TemplateBinding BorderBrush}" 
        BorderThickness="{TemplateBinding BorderThickness}"
        >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ContentPresenter 
                Grid.ColumnSpan="2" 
                Grid.Row="1" 
                Content="{TemplateBinding Content}" 
                ContentTemplate="{TemplateBinding ContentTemplate}"                    
                    />


                <ResizeGrip HorizontalAlignment="Right" 
                x:Name="WindowResizeGrip" 
                VerticalAlignment="Bottom" 
                IsTabStop="False" 
                Visibility="Collapsed" 
                Grid.Column="1" 
                Grid.Row="2" />

                <StatusBar Height="20" Grid.ColumnSpan="2" Grid.Row="3" Background="{DynamicResource PadraoBackGround}">

                </StatusBar>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



</ResourceDictionary>